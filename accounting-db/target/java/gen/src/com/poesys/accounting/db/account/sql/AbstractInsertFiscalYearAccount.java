/**
 * Copyright 2016 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractInsert.vsl

package com.poesys.accounting.db.account.sql;



import java.sql.PreparedStatement;

import com.poesys.db.dao.insert.IInsertSql;
import com.poesys.db.pk.IPrimaryKey;


/**
 * SQL statement specification for inserting a FiscalYearAccount
 * 
 * @author Robert J. Muller
 */
public class AbstractInsertFiscalYearAccount implements IInsertSql<com.poesys.accounting.db.account.IFiscalYearAccount> {
  private static final String SQL =
    "INSERT INTO FiscalYearAccount (accountName, entityName, year, orderNumber, accountType, groupOrderNumber) VALUES (?,?,?,?,?,?)";

  @Override
  public String getSql(IPrimaryKey key) {
    return SQL;
  }

  @Override
  public void setParams(PreparedStatement stmt, int index, 
                        com.poesys.accounting.db.account.IFiscalYearAccount object) {
    try {
      stmt.setInt(index, object.getOrderNumber());
    } catch (java.sql.SQLException e) {
      String message = com.poesys.db.Message.getMessage("com.poesys.db.sql.msg.parameter", null);
      throw new com.poesys.db.DbErrorException(message, e);
    }
    index++;
    try {
      stmt.setString(index, object.getAccountType());
    } catch (java.sql.SQLException e) {
      String message = com.poesys.db.Message.getMessage("com.poesys.db.sql.msg.parameter", null);
      throw new com.poesys.db.DbErrorException(message, e);
    }
    index++;
    try {
      stmt.setInt(index, object.getGroupOrderNumber());
    } catch (java.sql.SQLException e) {
      String message = com.poesys.db.Message.getMessage("com.poesys.db.sql.msg.parameter", null);
      throw new com.poesys.db.DbErrorException(message, e);
    }
    index++;
  }
  
  @Override
  public String getParamString(com.poesys.accounting.db.account.IFiscalYearAccount object) {
    StringBuilder builder = new StringBuilder();

    // Get the primary key string
    builder.append(object.getPrimaryKey().getStringKey());
    // Get the non-key attributes.
    builder.append(", ");
    builder.append("orderNumber: ");
    builder.append(object.getOrderNumber());
    // Get the non-key attributes.
    builder.append(", ");
    builder.append("accountType: ");
    builder.append(object.getAccountType());
    // Get the non-key attributes.
    builder.append(", ");
    builder.append("groupOrderNumber: ");
    builder.append(object.getGroupOrderNumber());
    return builder.toString();
  }
}
