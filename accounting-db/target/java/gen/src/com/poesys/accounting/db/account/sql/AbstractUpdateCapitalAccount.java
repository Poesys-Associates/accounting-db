/**
 * Copyright 2016 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractUpdate.vsl

package com.poesys.accounting.db.account.sql;


import java.sql.PreparedStatement;

import com.poesys.db.dao.update.IUpdateSql;
import com.poesys.db.pk.IPrimaryKey;


/**
 * SQL statement specification for updating a CapitalAccount with read/write properties
 * 
 * @author Robert J. Muller
 */
public class AbstractUpdateCapitalAccount implements IUpdateSql<com.poesys.accounting.db.account.ICapitalAccount> {
  /** SQL UPDATE statement for CapitalAccount */
  private static final String SQL =
    "UPDATE CapitalAccount SET ownership = ?, capitalEntityName = ? WHERE ";

  @Override
  public String getSql(IPrimaryKey key) {
    StringBuilder builder = new StringBuilder(SQL);
    builder.append(key.getSqlWhereExpression(""));
    return builder.toString();
  }

  @Override
  public int setParams(PreparedStatement stmt, int index, com.poesys.accounting.db.account.ICapitalAccount object) {
    try{
      if (object.getOwnership() != null) 
        stmt.setDouble(index, object.getOwnership());
      else
              stmt.setNull(index, java.sql.Types.DOUBLE);
    } catch (java.sql.SQLException e) {
      throw new com.poesys.db.DbErrorException("SQL error setting parameters", e);
    }
      index++;
    // sets key params for required capitalEntity object
    index = object.getCapitalEntity().getPrimaryKey().setParams(stmt, index);
    // sets primary key in where clause
    index = object.getPrimaryKey().setParams(stmt, index);
    return index;
  }

  @Override
  public String getParamString(com.poesys.accounting.db.account.ICapitalAccount dto) {
    StringBuilder builder = new StringBuilder("Parameters: \"");
    builder.append(dto.getOwnership());
    builder.append("\"");
    return builder.toString();
  }
}
