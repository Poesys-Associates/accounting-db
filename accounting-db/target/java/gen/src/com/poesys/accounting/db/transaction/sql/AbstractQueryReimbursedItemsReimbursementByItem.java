/**
 * Copyright 2016 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractQueryAssociatedLinks.vsl

package com.poesys.accounting.db.transaction.sql;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.poesys.db.dao.query.IParameterizedQuerySql;
import com.poesys.db.pk.IPrimaryKey;

import com.poesys.accounting.db.transaction.TransactionFactory;


/**
 * <p>
 * A query Command pattern object that implements a SQL query of a collection of 
 * Reimbursement objects using the primary key of the associated
 * class Item. These objects are the linking objects from the SQL 
 * table Reimbursement rather than the objects associated through
 * the link (Item), which have a separate representation.
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractQueryReimbursedItemsReimbursementByItem 
    implements IParameterizedQuerySql<com.poesys.accounting.db.transaction.IReimbursement, com.poesys.accounting.db.transaction.IItem> {
  /** SQL query statement for Reimbursement */
  private static final String SQL =
    "SELECT receivablesOrderNumber, reimbursedItemsOrderNumber, receivablesTransactionId, reimbursedItemsTransactionId, reimbursedAmount, allocatedAmount FROM Reimbursement WHERE reimbursedItemsOrderNumber = ? AND reimbursedItemsTransactionId = ?";

  public void bindParameters(PreparedStatement stmt, com.poesys.accounting.db.transaction.IItem parameters) {
    // Set the parameters starting with the first parameter.
    parameters.getPrimaryKey().setParams(stmt, 1);
  }

  public String getParameterValues(com.poesys.accounting.db.transaction.IItem parameters) {
    // Create the output string with the key parameters.
    return parameters.getPrimaryKey().getValueList();
  }

  public com.poesys.accounting.db.transaction.IReimbursement getData(ResultSet rs) {
    try {
      return TransactionFactory.getReimbursementData(getPrimaryKey(rs), rs);
    } catch (com.poesys.db.InvalidParametersException | SQLException e) {
      throw new com.poesys.db.DbErrorException("Error getting data", e);
    }
  }

  public IPrimaryKey getPrimaryKey(ResultSet rs) {
    try {
      return TransactionFactory.getReimbursementPrimaryKey(rs, "");
    } catch (com.poesys.db.InvalidParametersException | SQLException e) {
      throw new com.poesys.db.DbErrorException("Error getting primary key", e);
    }
  }

  public String getSql() {
    return SQL;
  }
}