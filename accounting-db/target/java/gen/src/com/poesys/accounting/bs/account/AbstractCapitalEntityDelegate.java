/**
 * Copyright 2016 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDelegate.vsl

package com.poesys.accounting.bs.account;


import com.poesys.db.connection.IConnectionFactory.DBMS;
import com.poesys.bs.delegate.AbstractDataDelegate;
import com.poesys.bs.delegate.DelegateException;
import com.poesys.db.dao.insert.IInsertSql;
import com.poesys.db.dao.update.IUpdateSql;
import com.poesys.db.dao.delete.IDeleteSql;
import com.poesys.db.dao.query.IKeyQuerySql;
import com.poesys.db.dao.query.IQuerySql;


/**
 * <p>
 * A business delegate that provides an application programming interface for
 * CapitalEntity objects and their dependents. You should not modify this class;
 * instead, override or add methods in the class CapitalEntityDelegate, which
 * specializes this class.
 * </p>
 * 
 * @see CapitalEntityDelegate
 * 
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractCapitalEntityDelegate
    extends AbstractDataDelegate<BsCapitalEntity, com.poesys.accounting.db.account.ICapitalEntity, com.poesys.db.pk.NaturalPrimaryKey> {
  
  @SuppressWarnings("unused")
  private static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(AbstractCapitalEntityDelegate.class);
  
  /**
   * Create an AbstractCapitalEntityDelegate object by supplying the database
   * subsystem in the database.properties file.
   * 
   * @param subsystem the database subsystem to use in database.properties
   */
  public AbstractCapitalEntityDelegate(String subsystem) {
    super(subsystem, 2147483647);
  }

  /**
   * Create an AbstractCapitalEntityDelegate object by supplying the database
   * subsystem in the database.properties file and a specific DBMS, usually
   * IConnectionFactory.DBMS.JNDI.
   * 
   * @param subsystem the database subsystem to use in database.properties
   * @param dbms the DBMS to use (usually IConnectionFactory.DBMS.JNDI)
   */
  public AbstractCapitalEntityDelegate(String subsystem, DBMS dbms) {
    super(subsystem, dbms, 2147483647);
  }

  @Override
  protected String getClassName() {
    return com.poesys.accounting.db.account.CapitalEntity.class.getName();
  }

  @Override
  protected IInsertSql<com.poesys.accounting.db.account.ICapitalEntity> getInsertSql() {
    return new com.poesys.accounting.db.account.sql.InsertCapitalEntity();
  }

  @Override
  protected IDeleteSql<com.poesys.accounting.db.account.ICapitalEntity> getDeleteSql() {
    return new com.poesys.accounting.db.account.sql.DeleteCapitalEntity();
  }

  @Override
  protected IUpdateSql<com.poesys.accounting.db.account.ICapitalEntity> getUpdateSql() {
    return new com.poesys.accounting.db.account.sql.UpdateCapitalEntity();
  }

  @Override
  protected IKeyQuerySql<com.poesys.accounting.db.account.ICapitalEntity> getQueryByKeySql() {
    return new com.poesys.accounting.db.account.sql.QueryCapitalEntity();
  }

  @Override
  protected IQuerySql<com.poesys.accounting.db.account.ICapitalEntity> getQueryListSql() {
    // Query-All method not required
    return new com.poesys.accounting.db.account.sql.QueryAllCapitalEntity();
  }

  @Override
  protected com.poesys.accounting.bs.account.BsCapitalEntity wrapData(com.poesys.accounting.db.account.ICapitalEntity dto) {
    return new com.poesys.accounting.bs.account.BsCapitalEntity(dto);
  }

  /**
   * <p>
   * Create a new CapitalEntity with data fields.
   * </p>
   * <p>
   * The CapitalEntity class has a natural key; this method creates the primary
   * key from the appropriate input properties.
   * </p>
   * 
   * @param capitalEntityName 
   * @return the new CapitalEntity object
   * @throws DelegateException when there is a problem generating the key or
   *             creating the object
   */
  public com.poesys.accounting.bs.account.BsCapitalEntity createCapitalEntity(java.lang.String capitalEntityName)
      throws DelegateException {
    com.poesys.db.pk.NaturalPrimaryKey key = null;
    try {
      java.util.ArrayList<com.poesys.db.col.AbstractColumnValue> list =
        new java.util.ArrayList<com.poesys.db.col.AbstractColumnValue>();
      list.add(new com.poesys.db.col.StringColumnValue("capitalEntityName", capitalEntityName));
      key = 
        com.poesys.db.pk.PrimaryKeyFactory.createNaturalKey(list, "com.poesys.accounting.db.account.CapitalEntity");
    } catch (com.poesys.db.InvalidParametersException e) {
      Object[] args = e.getParameters().toArray();
      String message = com.poesys.db.Message.getMessage(e.getMessage(), args);
      throw new DelegateException(message, e);
    } catch (com.poesys.db.DuplicateKeyNameException e) {
      Object[] args = e.getParameters().toArray();
      String message = com.poesys.db.Message.getMessage(e.getMessage(), args);
      throw new DelegateException(message, e);
    }

    // Create a data-access DTO for direct access, no proxy required.
    com.poesys.accounting.db.account.ICapitalEntity dto =
      new com.poesys.accounting.db.account.CapitalEntity(key, capitalEntityName);

    // Create the business DTO.
    return new com.poesys.accounting.bs.account.BsCapitalEntity(dto);
  }

}
